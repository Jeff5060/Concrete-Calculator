#Concrete Calculator
#Author: Haojie Xu

import tkinter
from tkinter import *

#calculation
SiO2_MW = 60.08 #g/mol
Al2O3_MW = 101.96 #g/mol
Na2O_MW = 61.9789 #g/mol

#convert kg to g
def get_gram(mass):
    mass = mass*1000
    return mass

#get mass of the particular chemical compound
def get_compound_mass(precursor_mass, percentage):
    return float(precursor_mass * percentage / 100)

#get mole function that will take the mass in gram and turn it into mole
def get_SiO2_mole(mass):
    return mass/SiO2_MW
def get_Al2O3_mole(mass):
    return mass/Al2O3_MW
def get_Na2O_mole(mass):
    return mass/Na2O_MW

#function to get ratio between two numbers
def get_ratio(x,y):
    x = float(x)
    y = float(y)
    ratio = float(round(x / y, 1))
    return ratio

def get_Si_mole(compound_mole):
    return compound_mole
def get_Al_mole(compound_mole):
    return compound_mole * 2

#create Tkinter object for GUI
window = tkinter.Tk()

#rename the title of the window
window.title("Concrete Calculator")

#delete add precursor button and prompt after clicked
def add_precursor_delete():
    s1.destroy()
    s2.destroy()

#action after clicking on precursor
def add_precursor():
    add_precursor_delete()

    #after clicking calculate button, following steps execute
    def calculate():

        #function to empty entries from previous calculation
        def reset():
            l5_b.destroy()
            l6_b.destroy()
            l7_b.destroy()
            l8_b.destroy()
            l9_b.destroy()
            l10_b.destroy()
            l11_b.destroy()
            l12_b.destroy()
            l13_b.destroy()
            l14_b.destroy()
            e1.delete(0,END)
            e2.delete(0, END)
            e3.delete(0, END)
            e4.delete(0, END)

        formula = e1.get()
        mass_content = float(e2.get())
        SiO2_content = float(e3.get())
        Al2O3_content = float(e4.get())

        SiO2_mass = get_compound_mass(mass_content, SiO2_content)
        Al2O3_mass = get_compound_mass(mass_content, Al2O3_content)

        SiO2_mole = float(get_SiO2_mole(SiO2_mass))
        Al2O3_mole = float(get_Al2O3_mole(Al2O3_mass))

        Si_mole = float(get_Si_mole(SiO2_mole))
        Al_mole = float(get_Al_mole(Al2O3_mole))

        Si_Al_ratio = float(get_ratio(Si_mole, Al_mole))
        SiO2_Al2O3_ratio = float(get_ratio(SiO2_mole, Al2O3_mole))

        l5 = Label(window, text="formula is: ")
        l5.grid(row=50, column=0, columnspan=3, padx=10, pady=10)
        l5_b = Label(window, text=str(formula))
        l5_b.grid(row=51, column=0, columnspan=3, padx=10, pady=5)

        l6 = Label(window, text="Total mass in gram: ")
        l6.grid(row=50, column=3, columnspan=3, padx=10, pady=30)
        l6_b = Label(window, text=str(mass_content))
        l6_b.grid(row=51, column=3, columnspan=3, padx=10, pady=5)

        l7 = Label(window, text="SiO2 mass in gram: ")
        l7.grid(row=50, column=7, columnspan=3, padx=10, pady=30)
        l7_b = Label(window, text=str(SiO2_mass))
        l7_b.grid(row=51, column=7, columnspan=3, padx=10, pady=5)

        l8 = Label(window, text="Al2O3 mass in gram: ")
        l8.grid(row=50, column=11, columnspan=3, padx=10, pady=30)
        l8_b = Label(window, text=str(Al2O3_mass))
        l8_b.grid(row=51, column=11, columnspan=3, padx=10, pady=5)

        l9 = Label(window, text="SiO2 mole is: ")
        l9.grid(row=50, column=15, columnspan=3, padx=10, pady=30)
        l9_b = Label(window, text=str(SiO2_mole))
        l9_b.grid(row=51, column=15, columnspan=3, padx=10, pady=5)

        l10 = Label(window, text="Al2O3 mole is: ")
        l10.grid(row=50, column=19, columnspan=3, padx=10, pady=30)
        l10_b = Label(window, text=str(Al2O3_mole))
        l10_b.grid(row=51, column=19, columnspan=3, padx=10, pady=5)

        l11 = Label(window, text="Si:Al ")
        l11.grid(row=50, column=23, columnspan=3, padx=10, pady=30)
        l11_b = Label(window, text=str(Si_Al_ratio))
        l11_b.grid(row=51, column=23, columnspan=3, padx=10, pady=5)

        l12 = Label(window, text="SiO2:Al2O3 ")
        l12.grid(row=50, column=27, columnspan=3, padx=10, pady=30)
        l12_b = Label(window, text=str(SiO2_Al2O3_ratio))
        l12_b.grid(row=51, column=27, columnspan=3, padx=10, pady=5)

        l13 = Label(window, text="Si mole")
        l13.grid(row=50, column=31, columnspan=3, padx=10, pady=30)
        l13_b = Label(window, text=str(Si_mole))
        l13_b.grid(row=51, column=31, columnspan=3, padx=10, pady=5)

        l14 = Label(window, text="Al mole")
        l14.grid(row=50, column=35, columnspan=3, padx=10, pady=30)
        l14_b = Label(window, text=str(Al_mole))
        l14_b.grid(row=51, column=35, columnspan=3, padx=10, pady=5)

        #emptying out the entries before inputting
        reset_button = Button(window, text="reset", padx=40, pady=20, command=reset)
        reset_button.grid(row=1, column=10, columnspan=3, padx=10, pady=10)


    p1 = Label(window, text="Please enter the precursor formula: ")
    p1.grid(row=0, column=0, columnspan=3, padx=10, pady=30)

    p2 = Label(window, text="Please enter the precursor's mass in gram (g): ")
    p2.grid(row=1, column=0, columnspan=3, padx=10, pady=30)

    p3 = Label(window, text="Please enter the SiO2 content (mass% as oxide)")
    p3.grid(row=2, column=0, columnspan=3, padx=10, pady=30)

    p4 = Label(window, text="Please enter the Al2O3 (mass% as oxide)")
    p4.grid(row=3, column=0, columnspan=3, padx=10, pady=30)

    e1 = Entry(window, width=35, borderwidth=5)
    e1.grid(row=0, column=4, columnspan=3, padx=10, pady=30)

    e2 = Entry(window, width=35, borderwidth=5)
    e2.grid(row=1, column=4, columnspan=3, padx=10, pady=30)
    info2 = e2.get()

    e3 = Entry(window, width=35, borderwidth=5)
    e3.grid(row=2, column=4, columnspan=3, padx=10, pady=30)

    e4 = Entry(window, width=35, borderwidth=5)
    e4.grid(row=3, column=4, columnspan=3, padx=10, pady=30)

    #calculate button and command
    calculate_button = Button(window, text="calculate", padx=40, pady=20, command=calculate)
    calculate_button.grid(row=0, column=10, columnspan=3, padx=10, pady=10)


s1 = Label(window,text="Please Click to add and define a precursor: ")
s1.grid(row=0, column=0, columnspan=3, padx=10, pady=30)

s2 = Button(window, text="Add a precursor", padx=40, pady=20, command=add_precursor)
s2.grid(row=0, column=10, columnspan=3, padx=10, pady=10)

window.mainloop()




